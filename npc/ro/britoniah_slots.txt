//===== rAthena Script =======================================
//= Episode 11.1 Socket Enchant NPC
//===== By: ==================================================
//= rAthena Dev Team
//===== Current Version: =====================================
//= 2.0a
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Adds slots to selected weapons and armor.
//===== Additional Comments: =================================
//= 0.1a added missing L_No: to 2 funcs [Lupus]
//= 0.1b Removed duplicates [Toms]
//= 0.2 Added missing next;'s [Evera]
//= 0.3 Fixed Zweihander[+] id [Lupus]
//= 1.0 Fixed ingredients check [Lupus]
//= 1.1 Updated to official. [SinSloth]
//= 1.1b Optimized/cleaned [ultramage]
//= 1.2 Fixed some typos and a nasty bug. [SinSloth]
//= 1.3 Fixed a wrong item ID with Sphinx Hat. [SinSloth]
//= 1.4 Corrected NPC names to fall within proper restrictions. [L0ne_W0lf]
//= 1.5 Removed Ontouch trigger area from NPCs. [L0ne_W0lf]
//= 1.6 Replaced effect numerics with constants. [Samuray22]
//= 1.7 Adjusted prices on some armor and weapons. [L0ne_W0lf]
//= 1.8 Added missing Gae Bolg and Dragon Slayer. [Kisuka]
//= 1.9 Moved Episode 12 items to separate NPC.
//=     Some cleanup & optimization. [Gepard]
//= 2.0 Duplicates now spawn from floating NPCs. [L0ne_W0lf]
//= 2.0a Added 'disable_items' command. [Euphy]
//============================================================

-	script	Berthold#dummy::SocketEnchant1	-1,{
	cutin "ep16_friedrich_stolz_heine",2;
	if (checkweight(1201,1) == 0)
	{
		mes "- Wait a minute !! -";
		mes "- Currently you're carrying -";
		mes "- too many items with you. -";
		mes "- Please try again -";
		mes "- after you lose some weight. -";
		cutin "",255;
		close;
	}
	mes "[Berthold]";
	mes "I'm an engineer that specializes in adding Slots to normal Weapons and Armor.";
	mes "My service fee, the required materials and the chance of success all depend on the specific item I'm working on.";
	next;
	mes "[Berthold]";
	mes "Adding Slots may seem simple, but it's far more complicated than it looks.";
	mes "If you're interested in my service, let me know.";
	next;
	switch(select("Add Slot to Weapon:Add Slot to Armor:Slot Attempt Info:Cancel"))
	{
		case 1:
			mes "[Berthold]";
			mes "You want to add a Slot to a weapon?";
			mes "I categorize weapons by their difficulty in adding a Slot, C Class being easiest and S Class the most difficult.";
			mes "Which class would you like to try?";
			next;
			switch(select("C Class:B Class:A Class:S Class"))
			{
				case 1:
					mes "[Berthold]";
					mes "C Class, eh?";
					mes "Now, I can only upgrade certain equipment in that class, so please choose one of the following items, so we can try to add a Slot to it.";
					next;
					switch(select("Trident:Rope:Violin"))
					{
						case 1: callfunc "Func_Socket",1460,1461,40,66,200,1010,10;
						case 2: callfunc "Func_Socket",1950,1951,40,66,200,1010,10;
						case 3: callfunc "Func_Socket",1901,1902,40,66,200,1010,10;
					}
				case 2:
					mes "[Berthold]";
					mes "B Class?";
					mes "Alright, this is the average equipment category.";
					mes "Please choose the weapon to which you'd like me to try to add a Slot.";
					next;
					switch(select("Chain:Gladius:Gakkung Bow:Pike:Haedonggum:Lute:Wire:Waghnakh:Arbalest Bow"))
					{
						case 1: callfunc "Func_Socket",1519,1520,40,61,300,1010,10;
						case 2: callfunc "Func_Socket",1219,1220,40,61,300, 984, 1,999,5;
						case 3: callfunc "Func_Socket",1714,1716,40,61,300, 984, 2,999,5;
						case 4: callfunc "Func_Socket",1407,1408,40,61,200,1010,10;
						case 5: callfunc "Func_Socket",1123,1128,40,61,300, 984, 2,999,5;
						case 6: callfunc "Func_Socket",1905,1906,40,61,300,1011,10;
						case 7: callfunc "Func_Socket",1954,1955,40,61,300,1011,10;
						case 8: callfunc "Func_Socket",1801,1802,40,61,300,1010,10;
						case 9: callfunc "Func_Socket",1713,1715,40,61,300, 984, 2,999,5;
					}
				case 3:
					mes "[Berthold]";
					mes "Ooh, A Class.";
					mes "This is some high risk territory!";
					mes "Alright, which weapon would you like me to try adding a Slot?";
					next;
					switch(select("Hunter Bow:Survivor's Rod(INT):Zweihander:Flamberge:Infiltrator:Ballista:Stunner:Berserk:Claymore"))
					{
						case 1: callfunc "Func_Socket",1718,1726,40,61,500,984,2,999,10;
						case 2: callfunc "Func_Socket",1619,1620,40,61,500,984,5,999,10;
						case 3: callfunc "Func_Socket",1168,1171,40,61,800,984,5,999,10;
						case 4: callfunc "Func_Socket",1129,1149,40,61,500,984,2,999,10;
						case 5: callfunc "Func_Socket",1261,1266,40,61,700,984,5,999,10;
						case 6: callfunc "Func_Socket",1722,1727,40,61,500,984,5,999,10;
						case 7: callfunc "Func_Socket",1522,1532,40,61,500,984,2,999,10;
						case 8: callfunc "Func_Socket",1814,1816,40,61,500,984,5,999,10;
						case 9: callfunc "Func_Socket",1163,1172,40,61,500,984,2,999,10; // NPC says "5 Oridecon" (Aegis) but takes only 2
					}
				case 4:
					mes "[Berthold]";
					mes "Whoa, whoa, whoa...";
					mes "S class? Alright...";
					mes "It'd be a near miracle if I can actually pull this off.";
					mes "Okay... Which weapon shall we try adding a Slot to?";
					next;
					switch(select("Gungnir:Poison Knife:Ice Pick:Sucsamad:Ginnungagap:Cutlas:Crescent Scythe:Survivor's Rod(DEX)"))
					{
						case 1: callfunc "Func_Socket", 1413, 1418,40,51,1000,984,5,999,10;
						case 2: callfunc "Func_Socket", 1239,13016,40,51,1000,984,5,999,10;
						case 3: callfunc "Func_Socket", 1230,13017,40,51,2000,984,5,999,10;
						case 4: callfunc "Func_Socket", 1236,13018,40,51,1000,984,5,999,10;
						case 5: callfunc "Func_Socket",13002,13019,40,51,1000,984,5,999,10;
						case 6: callfunc "Func_Socket", 1135,13400,40,51,1000,984,5,999,10;
						case 7: callfunc "Func_Socket", 1466, 1476,40,51,1000,984,5,999,10;
						case 8: callfunc "Func_Socket", 1617, 1618,40,51,2000,984,5,999,10;
					}
			}
		case 2:
			mes "[Berthold]";
			mes "Armor, you said?";
			mes "Sure, no problem.";
			mes "Armor is divided into 4 different classes, depending on the work difficulty.";
			mes "C Class is the easiest one, and S Class he hardest one.";
			mes "Which class would you like to try?";
			next;
			switch(select("C Class:B Class:A Class:S Class"))
			{
				case 1:
					mes "[Berthold]";
					mes "C Class Armor, eh?";
					mes "Sounds reasonable.";
					mes "Which armor would you like to try adding a Slot?";
					next;
					switch(select("Mantle:Coat:Circlet:Biretta"))
					{
						case 1: callfunc "Func_Socket",2307,2308,40,66,200,999,3;
						case 2: callfunc "Func_Socket",2309,2310,40,66,200,999,3;
						case 3: callfunc "Func_Socket",2232,2233,40,66,200,999,3;
						case 4: callfunc "Func_Socket",2216,2217,40,66,200,999,3;
					}
				case 2:
					mes "[Berthold]";
					mes "You have chosen average B Class.";
					mes "So, what kind of armor do you have?";
					next;
					switch(select("Mirror Shield:Chain Mail:Saint Robe:Silk Robe:Boots:Shoes:Muffler:Guard:Buckler:Shield:Bongun Hat"))
					{
						case 1:  callfunc "Func_Socket",2107,2108,40,61,250,999,5;
						case 2:  callfunc "Func_Socket",2314,2315,40,61,250,999,5;
						case 3:  callfunc "Func_Socket",2325,2326,40,61,300,999,5;
						case 4:  callfunc "Func_Socket",2321,2322,40,61,300,999,5;
						case 5:  callfunc "Func_Socket",2405,2406,40,61,300,999,5;
						case 6:  callfunc "Func_Socket",2403,2404,40,61,300,999,5;
						case 7:  callfunc "Func_Socket",2503,2504,40,61,300,999,5;
						case 8:  callfunc "Func_Socket",2101,2102,40,61,300,999,5;
						case 9:  callfunc "Func_Socket",2103,2104,40,61,300,999,5;
						case 10: callfunc "Func_Socket",2105,2106,40,61,250,999,5;
						case 11: callfunc "Func_Socket",5046,5168,40,61,250,999,5;
					}
				case 3:
					mes "[Berthold]";
					mes "Ooh, A Class.";
					mes "This is some high risk territory!";
					mes "Alright, which armor would you like me to try adding a Slot?";
					next;
					switch(select("Gemmed Sallet:Bucket Hat:Memory Book:Tights:Legion Plate Armor:Full Plate:Thief Clothes:Greaves:Coif:Manteau:Helm:Ninja Suit:Orc Helm:Ancient Cape:Monk Hat:Golden Gear:Brooch:Munak Hat"))
					{
						case 1:  callfunc "Func_Socket",2230,2231,40,61,400,985,1;
						case 2:  callfunc "Func_Socket",5114,5120,40,61,400,985,1;
						case 3:  callfunc "Func_Socket",2109,2121,40,61,400,985,1;
						case 4:  callfunc "Func_Socket",2330,2331,40,61,400,985,1;
						case 5:  callfunc "Func_Socket",2341,2342,40,61,400,985,1;
						case 6:  callfunc "Func_Socket",2316,2317,40,61,400,985,1;
						case 7:  callfunc "Func_Socket",2335,2336,40,61,400,985,1;
						case 8:  callfunc "Func_Socket",2411,2412,40,61,400,985,1;
						case 9:  callfunc "Func_Socket",5092,5093,40,61,400,985,1;
						case 10: callfunc "Func_Socket",2505,2506,40,61,400,985,1;
						case 11: callfunc "Func_Socket",2228,2229,40,61,400,985,1;
						case 12: callfunc "Func_Socket",2337,2359,40,61,400,985,1;
						case 13: callfunc "Func_Socket",2299,5157,40,61,400,985,1;
						case 14: callfunc "Func_Socket",2507,2525,40,61,400,985,1;
						case 15: callfunc "Func_Socket",2251,5158,40,61,400,985,1;
						case 16: callfunc "Func_Socket",2246,5159,40,61,400,985,1;
						case 17: callfunc "Func_Socket",2605,2625,40,61,400,985,1;
						case 18: callfunc "Func_Socket",2264,5167,40,61,300,985,1;
					}
				case 4:
					mes "[Berthold]";
					mes "Um... S Class?";
					mes "You sure about this?";
					mes "Alright... Let me know the Armor to which you'd like to add a Slot, and I'll tell what I need to try it.";
					next;
					switch(select("Majestic Goat:Spiky Band:Bone Helm:Corsair:Crown:Tiara:Sphinx Hat:Robe of Cast:Earring:Ring:Bow Thimble"))
					{
						case 1:  callfunc "Func_Socket",2256,5160,40,51,2000,985,2;
						case 2:  callfunc "Func_Socket",2258,5161,40,51,2000,985,2;
						case 3:  callfunc "Func_Socket",5017,5162,40,51,2000,985,2;
						case 4:  callfunc "Func_Socket",5019,5163,40,51,2000,985,2;
						case 5:  callfunc "Func_Socket",2235,5165,40,51,2000,985,2;
						case 6:  callfunc "Func_Socket",2234,5164,40,51,2000,985,2;
						case 7:  callfunc "Func_Socket",5053,5166,40,51,1000,985,2;
						case 8:  callfunc "Func_Socket",2343,2360,40,51,1000,985,2;
						case 9:  callfunc "Func_Socket",2602,2622,40,51,1000,985,2;
						case 10: callfunc "Func_Socket",2601,2621,40,51,1000,985,2;
						case 11: callfunc "Func_Socket",2619,2671,40,51,1000,985,2;
					}
			}
		case 3:
			mes "[Berthold]";
			mes "Well, I haven't really refined the art of Slot Addition.";
			mes "It's so complicated that I'd be lying if I told you that I knew every factor that affected the process.";
			mes "Still, I do notice a few trends...";
			next;
			mes "[Berthold]";
			mes "In some towns, Slot addition attempts are more successful for equipment with fewer upgrades.";
			mes "In other towns, the opposite is true.";
			mes "isn't that really peculiar?";
			next;
			mes "[Berthold]";
			mes "Oh, there's also something really important that you should know.";
			mes "If you ask me to add a Slot to something, make sure that you don't have multiples of it in your inventory.";
			next;
			mes "[Berthold]";
			mes "Here's an example: if you have a +7 Manteau and a normal Manteau in your inventory, then I will randomly pick one of them for my Slot Addition attempt.";
			mes "Just remember to be careful.";
			next;
			mes "[Berthold]";
			mes "Again, ^FF0000only carry one of the equipment to which you want me to add a Slot^000000.";
			mes "All other equipment with the same name should be placed in your Kafra Storage, got it?";
			cutin "",255;
			close;
		case 4:
			mes "[Berthold]";
			mes "Take it easy, adventurer.";
			mes "If you ever want to try adding a Slot to some of your equipment, come back and let me know.";
			mes "Seeya~";
			cutin "",255;
			close;
	}
}

function	script	Func_Socket	{
	.@item_id = getarg(0);
	.@zeny_req = getarg(4);
	setarray .@item_req[0], getarg(5), getarg(7,0);
	setarray .@req_amount[0], getarg(6), getarg(8,0);

	disable_items;
	mes "[Berthold]";
	mes "You want to add a Slot to a "+ getitemname(.@item_id) +"?";
	mes "Alright, please bring me ^FF0000"+ .@req_amount[0] +" "+ getitemname(.@item_req[0]) + (.@req_amount[0] > 1 && .@item_req[0] != 999 ? "s":"") +"^000000, "+ (.@item_req[1] != 0 && .@req_amount[1] != 0 ? ("^FF0000"+ .@req_amount[1] +" "+ getitemname(.@item_req[1]) + (.@req_amount[1] > 1 && .@item_req[1] != 999 ? "s":"") + "^000000 ") : "") + "and my ^FF0000" + (.@zeny_req >= 1000 ? (.@zeny_req /1000 +",000") : .@zeny_req) +",000 zeny^000000 service fee.";
	mes "Ah, and don't forget to bring that "+ getitemname(.@item_id) +"!";
	next;
	mes "[Berthold]";
	if (getiteminfo(.@item_id,5) & EQP_HAND_R) // weapon
	{
		mes "I can try to add a slot now if you have the required items and zeny.";
		mes "However, you should know that there's a chance that I might fail.";
		mes "Therefore, I need to give you a fair warning...";
		next;
		mes "[Berthold]";
		mes "If this attempt to add a Slot to your Weapon fails, then the ^FF0000Weapon^000000, ^FF0000and any Cards compounded to it will be destroyed^000000.";
	}
	else // armor
	{
		mes "If you have all the required materials, my zeny service fee and the Armor, then we can go ahead with the Slot Addition attempt.";
		mes "But before that, I must warn you of the risk.";
		next;
		mes "[Berthold]";
		mes "If this attempt to add a Slot to your Armor fails, then the ^FF0000Armor^000000, ^FF0000it's upgrades^000000 ^FF0000and any Cards compounded to it will be destroyed^000000.";
	}
	mes "Do you still want to try to add a Slot?";
	next;
	switch(select("Attempt Slot Addition:Cancel"))
	{
		case 1:
			if ((Zeny >= .@zeny_req*1000) && countitem(.@item_req[0]) >= .@req_amount[0] && countitem(getarg(7,512)) >= .@req_amount[1] && countitem(.@item_id) > 0)// if there's no getarg(7) and getarg(8) provided, check itemcount against 0 (we still need a valid item ID though)
			{
				mes "[Berthold]";
				mes "Alright then, let the work begin!";
				mes "You'd better pray for a successful result.";
				next;
				set .@a, rand(1,100);
				if ((.@a > getarg(2)) && (.@a < getarg(3)))
				{
					specialeffect getarg(3) == 51 ? EF_LORD : EF_SANCTUARY; // only S Class items have Lord of Vermillion effect
					mes "[Berthold]";
					mes "Great, it seems to be successful.";
					mes "It looks pretty well done. Congratulations!";
					delitem .@item_id,1;
					delitem .@item_req[0],.@req_amount[0];
					if (.@item_req[1] != 0 && .@req_amount[1] != 0)
						delitem .@item_req[1],.@req_amount[1];
					Zeny = Zeny - .@zeny_req *1000;
					getitem getarg(1),1;
					next;
					mes "[Berthold]";
					mes "See you again, buddy!";
					cutin "",255;
					close;
				}
				else
				{
					specialeffect EF_SUI_EXPLOSION;
					mes "[Berthold]";
					mes "Wah! ...I am so sorry, it failed.";
					mes "However, I am completely innocent.";
					mes "This is your luck, and it is destined by god, okay?";
					mes "Don't be so disappointed, and try next time.";
					delitem .@item_id,1;
					delitem .@item_req[0],.@req_amount[0];
					if (.@item_req[1] != 0 && .@req_amount[1] != 0)
						delitem .@item_req[1],.@req_amount[1];
					Zeny = Zeny - .@zeny_req *1000;
					next;
					mes "[Berthold]";
					mes "I wish you good luck next time!";
					cutin "",255;
					close;
				}
			}
			else
			{
				mes "[Berthold]";
				mes "I'd like to go ahead with this Slot Addition attempt, but you're missing a few things.";
				mes "You sure that you have the equipment, required materials and the zeny?";
				cutin "",255;
				close;
			}
		case 2:
			mes "[Berthold]";
			mes "Need some time to think about it, huh?";
			mes "Alright, I can understand.";
			mes "Just remember that life's no fun if you're always playing it safe~";
			cutin "",255;
			close;
	}
}

bri_in,243,168,4	duplicate(SocketEnchant1)	Berthold#bri	10120

-	script	Bertram#dummy::SocketEnchant3	-1,{
	cutin "16mye_nor",2;
	if (checkweight(1201,1) == 0)
	{
		mes "- Wait a minute !! -";
		mes "- Currently you're carrying -";
		mes "- too many items with you. -";
		mes "- Please try again -";
		mes "- after you lose some weight. -";
		cutin "",255;
		close;
	}
	mes "[Bertram]";
	mes "Good day. My name is Bertram,";
	mes "and I'm a technician that specializes in";
	mes "adding slots to weapons and armors.";
	mes "It can be very hard sometimes, but I like";
	mes "what I do, and take pride in it.";
	next;
	mes "[Bertram]";
	mes "I've learned most of the things from my brother, Berthold,";
	mes "but I think I still have a lot to learn.";
	mes "So please understand my slotting services are limited,";
	mes "unlike my brother Berthold.";
	next;
	mes "[Bertram]";
	mes "My brother wasn't so happy to teach me";
	mes "his skills because he was worried that his skills";
	mes "wouldn't be unique anymore. He did, however, his best";
	mes "to teach me.";
	next;
	mes "[Bertram]";
	mes "Thanks to him, I've learned lots of things.";
	mes "I'm not very confident";
	mes "in trying many different things,";
	mes "but I'll do what";
	mes "I can do for now.";
	next;
	mes "[Bertram]";
	mes "In fact, there's one thing";
	mes "that my brother doesn't want me to do.";
	mes "I don't want to upset him, so...let's just skip that part.";
	mes "I'll say no more about it!";
	next;
	mes "[Bertram]";
	mes "Anyways, do you have any equipment";
	mes "which you'd like to add to the slots?";
	mes "My service charge, the materials,";
	mes "and the success chance all depend on";
	mes "the specific item I'm working on.";
	next;
	switch(select("Weapon:Armor:About that thing you skipped:More information:Quit"))
	{
		case 1:
			mes "[Bertram]";
			mes "Weapon, you said? Sure, no problem.";
			mes "Weapons are divided into 4 different class";
			mes "depending on the work difficulty.";
			mes "C class is the easiest one, and S class is the hardest one.";
			mes "Which class would you like to try?";
			next;
			switch(select("C:B:A:S"))
			{
				case 1:
					mes "[Bertram]";
					mes "C class, I see.";
					mes "So, what kind of weapon do you have?";
					next;
					switch(select("Book of Mother Earth:Book of Billows:Book of Gust of Wind:Book of the Blazing Sun"))
					{
						case 1: callfunc "Func_Socket2",1554,1569,40,66,200,1010,10;
						case 2: callfunc "Func_Socket2",1553,1568,40,66,200,1010,10;
						case 3: callfunc "Func_Socket2",1556,1571,40,66,200,1010,10;
						case 4: callfunc "Func_Socket2",1555,1570,40,66,200,1010,10;
					}
				case 2:
					mes "[Bertram]";
					mes "You have chosen average B class.";
					mes "So, what kind of weapon do you have?";
					next;
					switch(select("Orcish Axe:Scimiter:Spike"))
					{
						case 1: callfunc "Func_Socket2",1304,1309,40,66,200,984,1;
						case 2: callfunc "Func_Socket2",1113,1114,40,66,200,984,1;
						case 3: callfunc "Func_Socket2",1523,1538,40,61,300,984,1;
					}
				case 3:
					mes "[Bertram]";
					mes "A class? You seem to want little too much. But, no problem.";
					mes "So, what kind of weapon do you have?";
					next;
					switch(select("Dragon Killer:Katar of Quaking:Katar of Raging Blaze:Katar of Frozen Icicle:Katar of Piercing Wind:Golden Mace:Oriental Lute:Queen's Whip:Spectral Spear:Gae Bolg:Schweizersabel"))
					{
						case 1:  callfunc "Func_Socket2",13001,13030,40,61,500,984,2;
						case 2:  callfunc "Func_Socket2", 1257, 1276,40,66,500,984,2;
						case 3:  callfunc "Func_Socket2", 1258, 1277,40,66,500,984,2;
						case 4:  callfunc "Func_Socket2", 1256, 1275,40,66,500,984,2;
						case 5:  callfunc "Func_Socket2", 1259, 1278,40,66,500,984,2;
						case 6:  callfunc "Func_Socket2", 1524, 1539,40,61,500,984,2;
						case 7:  callfunc "Func_Socket2", 1918, 1922,40,61,500,984,2;
						case 8:  callfunc "Func_Socket2", 1970, 1976,40,61,500,984,2;
						case 9:  callfunc "Func_Socket2", 1477, 1479,40,56,500,984,2;
						case 10: callfunc "Func_Socket2", 1474, 1480,40,56,500,984,2;
						case 11: callfunc "Func_Socket2", 1167, 1178,40,61,500,984,2;
					}
				case 4:
					mes "[Bertram]";
					mes "Huh, S Class?! Oh my god, are you serious?*Tremble*";
					mes "So...which S class weapon would you like to make a slot?!";
					next;
					switch(select("Zephyrus:Mailbreaker:Dragon Slayer:Swordbreaker:Assasin Dagger:Grand Cross:Executioner"))
					{
						case 1: callfunc "Func_Socket2",1468, 1481,40,51,1000,984,5,999,10;
						case 2: callfunc "Func_Socket2",1225,13032,40,51,1000,984,5,999,10;
						case 3: callfunc "Func_Socket2",1166, 1180,40,51,1000,984,5,999,10;
						case 4: callfunc "Func_Socket2",1224,13031,40,51,1000,984,5,999,10;
						case 5: callfunc "Func_Socket2",1232,13033,40,51,1000,984,5,999,10;
						case 6: callfunc "Func_Socket2",1528, 1540,40,51,1000,984,5,999,10;
						case 7: callfunc "Func_Socket2",1169, 1179,40,51,1000,984,5,999,10;
					}
			}
		case 2:
			mes "[Bertram]";
			mes "Armor, you said? Sure, no problem.";
			mes "Weapons are divided into 4 different class";
			mes "depending on the work difficulty.";
			mes "C class is the easiest one, and S class is the hardest one.";
			mes "Which class would you like to try?";
			next;
			switch(select("C:B:A:S"))
			{
				case 1:
					mes "[Bertram]";
					mes "C class, I see.";
					mes "So, what kind of armor do you have?";
					next;
					switch(select("Sunflower:Ph.D Hat:Big Ribbon:Boys Cap"))
					{
						case 1: callfunc "Func_Socket2",2253,5351,40,66,100,999,3;
						case 2: callfunc "Func_Socket2",5012,5347,40,66,100,999,3;
						case 3: callfunc "Func_Socket2",2244,5348,40,66,100,999,5;
						case 4: callfunc "Func_Socket2",5016,5349,40,66,100,999,5;
					}
				case 2:
					mes "[Bertram]";
					mes "You have chosen average B class.";
					mes "So, what kind of armor do you have?";
					next;
					switch(select("Skull Ring:High Heels"))
					{
						case 1: callfunc "Func_Socket2",2609,2715,40,61,300,999,5;
						case 2: callfunc "Func_Socket2",2409,2432,40,61,300,999,5;
					}
				case 3:
					mes "[Bertram]";
					mes "A class? You seem to want little too much. But, no problem.";
					mes "So, what kind of armor do you have?";
					next;
					switch(select("Pirate Bandana:Black Leather Boots"))
					{
						case 1: callfunc "Func_Socket2",2287,5350,50,61,500,985,1; // 50,61 - it's not a typo
						case 2: callfunc "Func_Socket2",2425,2434,40,51,500,985,1;
						//case 3: callfunc "Func_Socket2",15053,15056,x,x,x,x,x;	// Special Ninja Suit (Needs more info)
					}
				case 4:
					mes "[Bertram]";
					mes "Huh, S Class?! Oh my god, are you serious?*Tremble*";
					mes "So...which S class armor would you like to make a slot?!";
					next;
					switch(select("Mage Coat:Holy Robe:Sacred Mission:Undershirt:Pantie"))
					{
						case 1: callfunc "Func_Socket2",2334,2372,40,51,1000,985,1; // Mage Coat has 10% success chance
						case 2: callfunc "Func_Socket2",2327,2373,45,51,1000,985,1; // the rest has 5%
						case 3: callfunc "Func_Socket2",2111,2128,45,51,1000,985,1;
						case 4: callfunc "Func_Socket2",2522,2523,45,51,1000,985,1;
						case 5: callfunc "Func_Socket2",2339,2371,45,51,1000,985,1;
					}
			}
		case 3:
			mes "[Bertram]";
			mes "Oh, it's nothing special, but he thinks";
			mes "it's not something for humans to mess with. ";
			mes "I don't want to upset my brother,";
			mes "so I'd better forget about it.";
			next;
			mes "[Bertram]";
			mes "...That service itself has a very high success chance,";
			mes "but requires a lot of materials and a high-rate service charge. ";
			mes "I highly doubt that anyone would actually want to use";
			mes "the service, even if I did open it.";
			next;
			mes "[Bertram]";
			mes "...Ummm...";
			next;
			mes "[Bertram]";
			mes ".............";
			next;
			mes "[Bertram]";
			mes ".............";
			next;
			mes "[Bertram]";
			mes "You seem interested in using that service.";
			mes "If you want, I can at least tell you about it. ";
			mes "But you must promise to keep this a secret.";
			mes "If my brother finds out what I'm about to tell you,";
			mes "he's gonna give me a beating!";
			next;
			mes "[Bertram]";
			mes "This special service has a 90% success chance,";
			mes "but requires 2 Gold and 2 hundred million zeny:";
			mes "I can add slots to the Hat of the Sun God.";
			next;
			mes "[Bertram]";
			mes "My brother said that, even since ancient times, it's forbidden to modify that hat. ";
			mes "But I believe humans are too curious not to";
			mes "experiment, especially when it's forbidden.";
			mes "I just don't want my brother to yell at me. That's all.";
			next;
			switch(select("Use the Service","Quit"))
			{
				case 1:
					mes "[Bertram]";
					mes ".................";
					next;
					mes "[Bertram]";
					mes ".................";
					next;
					mes "[Bertram]";
					mes "...Wh... What? No!";
					mes "Giving me that dirty look";
					mes "won't make me do it!";
					mes "No, I said no! No is no! No!";
					next;
					mes "[Bertram]";
					mes "No, I won't! No!";
					next;
					mes "[Bertram]";
					mes "I can't do it...";
					next;
					mes "[Bertram]";
					mes "I can't do... It...";
					next;
					mes "[Bertram]";
					mes ".................";
					next;
					mes "[Bertram]";
					mes "Umm...";
					next;
					mes "[Bertram]";
					mes "You're so persistent. Okay, I'll make you an exception.";
					mes "Just don't tell anyone,";
					mes "especially my brother. Do you promise?";
					next;
					mes "[Bertram]";
					mes "Okay then, please bring me";
					mes "^FF00002 Gold, 2 hundred million zeny -- the service charge --,";
					mes "^FF0000and a Hat of the Sun God.";
					mes "^FF0000You know your chance of success is 90% with this, don't you?^000000";
					mes "We don't have time to waste,";
					mes "so let's get down to business right away.";
					next;
					if ((Zeny > 199999999) && (countitem(969) > 1) && (countitem(5022) > 0))
					{
						mes "[Bertram]";
						mes "Shall we start now?";
						mes "Pray to your gods for good luck.";
						next;
						set .@a, rand(1,100);
						if ((.@a > 4) && (.@a < 95))
						{
							specialeffect EF_LORD;
							mes "[Bertram]";
							mes "Excellent! Wow, I guess the 90% success chance is true!";
							mes "Look, the slot was added in the perfect place.";
							mes "Congratulations.";
							delitem 5022,1; //Helm_Of_Sun
							delitem 969,2; //Gold
							set Zeny, Zeny - 200000000;
							getitem 5353,1; //Helm_Of_Sun_
							next;
							mes "[Bertram]";
							mes "This is the first and last time I will do this for you.";
							mes "Don't ever tell anyone";
							mes "about this. Okay?";
							close;
						}
						else
						{
							specialeffect EF_SUI_EXPLOSION;
							mes "[Bertram]";
							mes "Wah! Oh my god, we failed!";
							mes "My god, I guess we had the worst kind of luck...";
							mes "What should we do? ...This is why";
							mes "I didn't want to do in the first place!";
							delitem 5022,1; //Helm_Of_Sun
							delitem 969,2; //Gold
							set Zeny, Zeny - 200000000;
							next;
							mes "[Bertram]";
							mes "No, don't ever ask me to do such a risky thing again!";
							mes "Bah~";
							cutin "",255;
							close;
						}
					}
					else
					{
						mes "[Bertram]";
						mes "Umm...";
						next;
						mes "[Bertram]";
						mes "You don't have enough materials.";
						mes "Man, why did you even ask me to try?";
						mes "I'm not going to do this again for you,";
						mes "even if you bring enough materials. Bah~";
						cutin "",255;
						close;
					}
				case 2:
					mes "[Bertram]";
					mes "Don't ever tell anyone";
					mes "about what I told you. Okay?";
					cutin "",255;
					close;
			}
		case 4:
			mes "[Bertram]";
			mes "Do you want to know more information?";
			mes "Well, I don't think there's something";
			mes "that you specifically need to know.";
			mes "But I can at least give you a tip.";
			next;
			mes "[Bertram]";
			mes "The slot technicians in each town";
			mes "provide different slotting success chances";
			mes "depending on your equipment's upgrade level.";
			mes "I don't know if that's true,";
			mes "but I can see the difference in each town.";
			next;
			mes "[Bertram]";
			mes "For instance, a slot technician in one town";
			mes "provides a higher success chance to";
			mes "equipment items at higher upgrade levels,";
			mes "while a technician in another town has higher";
			mes "success at lower upgrade levels.";
			next;
			mes "[Bertram]";
			mes "When you fail to add a slot, the equipment";
			mes "will become broken and disappear.";
			mes "I try my best to succeed, but";
			mes "slotting is complicated work.";
			next;
			mes "[Bertram]";
			mes "Oh, there's an important thing that you need to be careful about.";
			mes "^FF0000Try not to carry two identical equipment items";
			mes "^FF0000with you when you add slots.";
			mes "^FF0000Otherwise, slots may be added to one of the randomly chosen items,";
			mes "^FF0000and in the worst case, you may lose an item that is more valuable to you.^000000";
			next;
			mes "[Bertram]";
			mes "I hope this information will be helpful to you.";
			mes "Thanks.";
			cutin "",255;
			close;
		case 5:
			mes "[Bertram]";
			mes "Alright, then.";
			cutin "",255;
			close;
	}
}

bri_in,253,167,5	duplicate(SocketEnchant3)	Bertram#bri	10129

function	script	Func_Socket2	{
	.@item_id = getarg(0);
	.@zeny_req = getarg(4);
	setarray .@item_req[0], getarg(5), getarg(7,0);
	setarray .@req_amount[0], getarg(6), getarg(8,0);

	disable_items;
	mes "[Bertram]";
	if (.@item_req[1] != 0 && .@req_amount[1] != 0)
	{
		mes getitemname(.@item_id) +"... Okay, then you need to bring me";
		mes "^FF0000"+ (.@zeny_req >= 1000 ? (.@zeny_req /1000 +",000") : .@zeny_req) +",000 zeny as service charge,";
		mes "^FF0000"+ .@req_amount[0] +"ea "+ getitemname(.@item_req[0]) +" and "+ .@req_amount[1] +"ea "+ getitemname(.@item_req[1]) +".";
		mes "^FF0000Of course, you need a "+ getitemname(.@item_id) +".^000000";
	}
	else
	{
		mes getitemname(.@item_id) +"? Okay, then you need to bring me";
		mes "^FF0000"+ (.@zeny_req >= 1000 ? (.@zeny_req/1000 +",000") : .@zeny_req) +",000 zeny as service charge and "+ .@req_amount[0] +" "+ getitemname(.@item_req[0]) + (.@req_amount[0] > 1 && .@item_req[0] != 999 ? "s":"") +" as the requirement.";
		mes "^FF0000Of course, don't forget to bring me a "+ getitemname(.@item_id) +".";
		mes "^FF0000You should have all items.^000000";
	}
	next;
	mes "[Bertram]";
	mes "Did you already bring all of them?";
	mes "For your information, if you fail to create a slot,";
	mes "you will lose all the item requirement as well as the target "+ ((getiteminfo(.@item_id,5)&EQP_HAND_R) ? "weapon" : "armor") +".";
	mes "Also remember, if the "+ ((getiteminfo(.@item_id,5)&EQP_HAND_R) ? "weapon" : "armor") +" has been upgraded, and has been inserted with a card,";
	mes "you will lose them even if you succeed in creating a slot.";
	next;
	switch(select("Ask for slot creation.:Try next time."))
	{
		case 1:
			if ((Zeny >= .@zeny_req*1000) && countitem(.@item_req[0]) >= .@req_amount[0] && countitem(getarg(7,512)) >= .@req_amount[1] && countitem(.@item_id) > 0)// if there's no .@req_amount[0] and .@req_amount[1] provided, check itemcount against 0 (we still need a valid item ID though)
			{
				mes "[Bertram]";
				mes "Alright then, let the work begin!";
				mes "You'd better pray for a successful result.";
				next;
				set .@a, rand(1,100);
				if ((.@a > getarg(2)) && (.@a < getarg(3)))
				{
					specialeffect EF_LORD;
					mes "[Bertram]";
					mes "Great, it seems to be successful.";
					mes "It looks pretty well done. Congratulations!";
					delitem .@item_id,1;
					delitem .@item_req[0],.@req_amount[0];
					if (.@item_req[1] != 0 && .@req_amount[1] != 0)
						delitem .@item_req[1],.@req_amount[1];
					Zeny = Zeny - .@zeny_req *1000;
					getitem getarg(1),1;
					next;
					mes "[Bertram]";
					mes "See you again, buddy!";
					cutin "",255;
					close;
				}
				else
				{
					specialeffect EF_SUI_EXPLOSION;
					mes "[Bertram]";
					mes "Wah! ...I am so sorry, it failed.";
					mes "However, I am completely innocent.";
					mes "This is your luck, and it is destined by god, okay?";
					mes "Don't be so disappointed,";
					mes "and try next time.";
					delitem .@item_id,1;
					delitem .@item_req[0],.@req_amount[0];
					if (.@item_req[1] != 0 && .@req_amount[1] != 0)
						delitem .@item_req[1],.@req_amount[1];
					Zeny = Zeny - .@zeny_req *1000;
					next;
					mes "[Bertram]";
					mes "See you again, buddy!";
					cutin "",255;
					close;
				}
			}
			else
			{
				mes "[Bertram]";
				mes "Are you stupid or what? You didn't bring all of the required items!";
				mes "Go bring them quick!";
				cutin "",255;
				close;
			}
		case 2:
			mes "[Bertram]";
			mes "See you next time.";
			cutin "",255;
			close;
	}
}

//britoniah craftman

bri_in,289,136,2	script	Christa	10079,{
	disable_items;
	cutin "ep15_2_fru_1",2;
	mes "[Christa]";
	if (Zeny >= 400000) {
		mes "I've been studying ways to enhance an armor to maximize its capability.";
		next;
		mes "[Christa]";
		mes "Enchanting is an awesome skill that infuses a mysterious status powers into the armor's hidden socket.";
		next;
		mes "[Christa]";
		mes "However, you have to keep in mind that if there are two armors of the same kind in your possession, the Enchantment will be applied in the order they are placed in your inventory.";
		next;
		mes "[Christa]";
		mes "In that case, the Enchantment may be applied to an item which you didn't mean to Enchant. So just bring ^5555ffONE Armor^000000 you want enchanted to be safe...";
		next;
		mes "[Christa]";
		mes "I'm not responsible for what would happen if you have more than one of the same kind in your inventory.";
		next;
		switch(select("Non Slotted Armor.:Slotted Armor.:High Grade Armor.:Maybe next time.")) {
		case 1:
			setarray .@Items[0],2307,2309,2314,2316,2321,2325,2327,2328,2330,2332,2334,2335,2341,2344,2346,2348,2350,2337,2386,2394,2395,2396;
			set .@j,50;
			break;
		case 2:
			setarray .@Items[0],2311,2318,2319,2320,2308,2310,2315,2317,2322,2324,2326,2331,2333,2336,2342,2345,2347,2349,2351;
			set .@j,55;
			set .@k,1;
			break;
		case 3:
			setarray .@Items[0],2364,2365,2391,2374,2375,2376,2377,2378,2379,2380,2381,2382,2387,2388,2389,2390;
			set .@j,60;
			break;
		case 4:
			mes "[Christa]";
			mes "Please come back when you have any interest in enchanting your armor.";
			cutin "",255;
			close;
		}
		set .@menu$,"";
		for(set .@i,0; .@i<getarraysize(.@Items); set .@i,.@i+1)
			set .@menu$, .@menu$+getitemname(.@Items[.@i])+((.@k)?" [1]":"")+":";
		callsub S_EnchantArmor, .@Items[select(.@menu$)-1], .@j;
		cutin "",255;
		end;
	}
	mes "I am in charge of Enchanting Armors. Simply put, I've been studying ways to power-up armor.";
	next;
	mes "[Christa]";
	mes "If by any chance, you would want to enchant your armor, bring me 400,000 zeny and the armor you want to enchant and you are all set to go.";
	cutin "",255;
	close;

S_EnchantArmor:
	set .@itemid,getarg(0);
	set .@failrate,getarg(1);
	mes "[Christa]";
	if (countitem(.@itemid) == 1) {
		mes "Socket enchant will cost you 400,000 zeny. And there will be a random option enchanted. Of course, there is a chance of breaking your armor.";
		next;
		mes "[Christa]";
		mes "First and most importantly.";
		mes "^ff5555Existing Refine Level of the Armor";
		mes "and Cards will be GONE.^000000";
		mes "Do you still want to try an Enchant?";
		next;
		if(select("Hmm... Let me think it over.:Go ahead.") == 1) {
			mes "[Christa]";
			mes "Well, I can't blame you. Safety first, eh?";
			mes "Now you have a nice day.";
			close;
		}
		mes "[Christa]";
		mes "Quite of an adventurer huh? Well, shall we?";
		cutin "",255;
		close2;
		specialeffect2 EF_MAPPILLAR;
		if (Zeny < 400000) {
			mes "[Christa]";
			mes "Sorry, but you don't have enough zeny.";
			close;
		}
		progressbar "ffff00",7;
		set Zeny, Zeny-400000;
		delitem .@itemid,1;
		switch (rand(1,.@failrate)) {
			case 1: set .@addpart,4702;break;
			case 2: set .@addpart,4712;break;
			case 3: set .@addpart,4722;break;
			case 4: set .@addpart,4732;break;
			case 5: set .@addpart,4742;break;
			case 6: set .@addpart,4752;break;
			case 7:
			case 8: set .@addpart,4701;break;
			case 9:
			case 10: set .@addpart,4711;break;
			case 11:
			case 12: set .@addpart,4721;break;
			case 13:
			case 14: set .@addpart,4731;break;
			case 15:
			case 16: set .@addpart,4741;break;
			case 17:
			case 18: set .@addpart,4751;break;
			case 19:
			case 20:
			case 21: set .@addpart,4700;break;
			case 22:
			case 23:
			case 24: set .@addpart,4710;break;
			case 25:
			case 26:
			case 27: set .@addpart,4720;break;
			case 28:
			case 29:
			case 30: set .@addpart,4730;break;
			case 31:
			case 32:
			case 33: set .@addpart,4740;break;
			case 34:
			case 35:
			case 36: set .@addpart,4750;break;
			default:
				specialeffect2 EF_PHARMACY_FAIL;
				mes "[Christa]";
				mes "Well that's too bad.";
				mes "The requested equipment has failed to enchant.";
				cutin "",255;
				close;
		}
		getitem2 .@itemid, 1, 1, 0, 0, 0, 0, 0, .@addpart;
	}
	else {
		mes "Hmm? There's nothing to be enchanted!";
		mes "Please come back with just ONE equipment to be enchanted.";
		cutin "",255;
		close;
	}
}
// advance refined (enriched)

bri_in,285,161,6	script	Talos#cash1	813,{
	disable_items;
	cutin "fey_nor",2;
	mes "[Talos]";
	mes "I am the Armsmith";
	mes "I can refine all kinds of weapons,";
	mes "armor and equipment, so let me";
	mes "know what you want to refine.";
	next;

	setarray .@indices[1], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_L, EQI_HAND_R, EQI_GARMENT, EQI_SHOES, EQI_ACC_L, EQI_ACC_R, EQI_HEAD_MID, EQI_HEAD_LOW;
	for(set .@i,1; .@i<=10; set .@i,.@i+1) {
		if (getequipisequiped(.@indices[.@i])) {
			set .@menu$, .@menu$ + F_getpositionname(.@indices[.@i]) + "-[" + getequipname(.@indices[.@i]) + "]";
			set .@equipped,1;
		}
		set .@menu$, .@menu$ + ":";
	}
	if (.@equipped == 0) {
		mes "[Talos]";
		mes "I don't think I can refine any items you have...";
		cutin "",255;
		close;
	}
	set .@part, .@indices[ select(.@menu$) ];

	if (!getequipisequiped(.@part)) //custom check
		close;
	if (!getequipisenableref(.@part)) {
		mes "[Talos]";
		mes "Go find another Blacksmith. You can't refine this thing.";
		cutin "",255;
		close;
	}
	if (getequiprefinerycnt(.@part) >= 10) {
		mes "[Talos]";
		mes "Hmm... someone perfected this already. I don't think I can work on it further.";
		cutin "",255;
		close;
	}

	.@refineitemid = getequipid(.@part); // save id of the item
	.@refinerycnt = getequiprefinerycnt(.@part); //save refinery count
	.@price = getequiprefinecost(.@part, REFINE_COST_ENRICHED, REFINE_ZENY_COST);
	.@material = getequiprefinecost(.@part, REFINE_COST_ENRICHED, REFINE_MATERIAL_ID);

	// Make sure you have the necessary items and Zeny to refine your items
	// Determines chance of failure and verifies that you want to continue.
	callsub S_RefineValidate,getequipweaponlv(.@part),.@material,.@price,.@part,.@refineitemid,.@refinerycnt;

	mes "[Talos]";
	mes "Clang! Clang! Clang!";
	if (getequippercentrefinery(.@part, true) > rand(100)) {
		successrefitem .@part;
		next;
		emotion ET_BEST;
		mes "[Talos]";
		mes "There you go! It's done.";
		mes "It's been a while since I've made such a fine "+((getequipweaponlv(.@part))?"weapon":"armor")+". You must be happy because it has become stronger!";
		cutin "",255;
		close;
	}
	failedrefitem .@part;
	next;
	emotion (!rand(5))?ET_MONEY:ET_HUK;
	mes "[Talos]";
	mes "Uuuuuuuuuummmmmph!!!";
	next;
	mes "[Talos]";
	mes "...";
	mes ".....";
	mes ".......Huhuhuhuhu~";
	mes "........It was your choice and my ability, no regret.";
	cutin "",255;
	close;

S_RefineValidate:
	.@weapon_lvl = getarg(0);
	.@item_req = getarg(1);
	.@price = getarg(2);
	.@part = getarg(3);
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);

	// If the VIP system is enabled, the prices for non-VIP players are considerably higher.
	if (VIP_SCRIPT && !vip_status(VIP_STATUS_ACTIVE)) {
		switch(.@weapon_lvl){
			case 0: set .@price, .@price * 10; break;
			case 1: set .@price, .@price * 40; break;
			case 2: set .@price, .@price * 50; break;
			case 3: set .@price, .@price * 2; break;
			case 4: set .@price, .@price * 2; break;
		}
	}

	mes "[Talos]";
	if (.@weapon_lvl)
		mes "You want to refine a level "+ .@weapon_lvl +" weapon?";
	mes "To refine that, you'll need to have one ^ff9999"+ getitemname(.@item_req) +"^000000 and "+ .@price +" zeny.";
	mes "Would you like to continue?";
	next;
	if(select("Yes:No") == 1) {
		if (getequippercentrefinery(.@part) < 100) {
			if (.@weapon_lvl) {
				mes "[Talos]";
				mes "Wow!!";
				mes "This weapon probably";
				mes "looks like it's been refined...";
				mes "many times...";
				mes "It may break if";
				mes "you refine it again.";
				next;
				mes "And if it breaks,";
				mes "you can't use it anymore!";
				mes "All the cards in it and the properties ^ff0000will be lost^000000!";
				mes "^ff0000Besides, the equipment will break!^000000";
				mes "Are you sure you still want to continue?";
				next;
				if(select("Yes:No") == 2) {
					mes "[Talos]";
					mes "Good.";
					mes "Because if the weapon breaks from unreasonable refining, then I get a bad mood, too.";
					close;
				}
			} else {
				mes "[Talos]";
				mes "Giggle. Giggle. Oh, you have guts, daring to refine this.";
				mes "You know it's pretty risky, don't you?";
				next;
				mes "If your defensive equipment is broken, you'll never be able to use it again.";
				mes "Even your cards and your modifications will ^ff0000completely disappear^000000.";
				//mes "Everything will disappear. As in... GONE!";
				mes "Do you really wish to continue?";
				next;
				if(select("Yes:No") == 2) {
					mes "[Talos]";
					mes "What nonsense. You waste my precious time.";
					mes "Get lost, punk.";
					close;
				}
			}
		}
		if (countitem(.@item_req) > 0 && Zeny > .@price) {
			delitem .@item_req,1;
			set Zeny, Zeny - .@price;

			// anti-hack
			if (callfunc("F_IsEquipIDHack", .@part, getarg(4)) ||
				callfunc("F_IsEquipRefineHack", .@part, getarg(5)) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3])) {
				mes "[Holink]";
				emotion ET_FRET;
				mes "Wait a second...";
				mes "Do you think I'm stupid?!";
				mes "You switched the item while I wasn't looking! Get out of here!";
				close;
			}

			return;
		}
		mes "[Talos]";
		mes "Are these all you have?";
		mes "I'm very sorry, but I can't do anything without all the materials. Besides, I deserve some payments for my work, don't I?";
		cutin "",255;
		close;
	}
	mes "[Talos]";
	mes "I can't help it even if you're not happy about it...";
	cutin "",255;
	close;
}

bri_in,277,172,4	script	Wattana#GymPass1	483,{
	cutin "3rd_sura_master",2;
	mes "[Wattana]";
	mes "Hey, there. People aren't";
	mes "as physically active as they";
	mes "used to be. Even if you fight";
	mes "for a living, your body might";
	mes "be weak and flabby in some";
	mes "areas. Know what I mean?";
	next;
	mes "[Wattana]";
	mes "[Wattana]";
	mes "Hey, train with me, and I can";
	mes "guarantee that you'll be able";
	mes "to lift and carry more of your";
	mes "stuff. Just gimme your";
	mes "^FF0000Gym Pass^000000 each time,";
	mes "and we'll be good to go.";
	next;
	mes "[Wattana]";
	mes "But don't get too excited:";
	mes "no matter how much training";
	mes "I take you through, you can";
	mes "overdo it. You ever hear of";
	mes "anyone that got too buff?";
	mes "That's cuz they're dead. See?";
	next;
	mes "[Wattana]";
	mes "I'd say that it'd be safe";
	mes "for you to seriously train";
	mes "with me and increase your";
	mes "item carrying capacity ^FF000010 times^000000.";
	mes "So... Are you ready to sweat?";
	next;
	switch(select("Yes:No:Um, my workouts wore off.")) {
	case 1:
		if (gympassmemory < 10) {
			set .@add_carry,gympassmemory + 1;
			set .@remain_carry,10 - .@add_carry;
			if (countitem(7776) > 0) {
				mes "[Wattana]";
				mes "Oh, awesome, I see you";
				mes "brought your Gym Pass.";
				mes "Alright, just do what I do,";
				mes "and try to feel the burn.";
				mes "Ready? Let's do this.";
				next;
				specialeffect2 EF_EARTHSPIKE;
				next;
				specialeffect2 EF_DEVIL;
				next;
				specialeffect2 EF_COIN;
				next;
				specialeffect2 EF_SIGHTRASHER;
				next;
				mes "[Wattana]";
				mes "There, you should be able";
				mes "to carry more stuff with you.";
				mes "Let's see, we can increase";
				mes "your item carrying capacity";
				mes "^FF00000" + .@remain_carry + "^000000 more times if we continue";
				mes "training together like this.";
				delitem 7776,1; //Max_Weight_Up_Scroll
				set gympassmemory,.@add_carry;
				skill "ALL_INCCARRY",.@add_carry,SKILL_PERM_GRANT;
				close;
			}
			else {
				mes "[Wattana]";
				mes "Dude, what'd I tell you?";
				mes "You gotta bring me your";
				mes "^FF0000Gym Pass^000000 if you wanna";
				mes "work out, and build up your";
				mes "item carrying muscles.";
				close;
			}
		}
		else {
			mes "[Wattana]";
			mes "Dude, I don't think we can";
			mes "build up your item carrying";
			mes "muscles anymore than that.";
			mes "It's too dangerous for your";
			mes "body if we even tried! C'mon,";
			mes "I told you about the limits.";
			cutin "",255;
			close;
		}
	case 2:
		mes "[Wattana]";
		mes "Aw, that's too bad.";
		mes "Well, come back if you";
		mes "change your mind. Tell";
		mes "your friends about me:";
		mes "if they're flabby, I'll help";
		mes "get them in shape.";
		cutin "",255;
		close;
	case 3:
		if (gympassmemory > 0) {
			mes "[Wattana]";
			mes "What happened?";
			mes "You let your item carrying";
			mes "muscles just atrophy? Lucky";
			mes "for you, there's such a thing";
			mes "as muscle memory. It's won't take";
			mes "as long to build 'em back up...";
			next;
			specialeffect2 EF_EARTHSPIKE;
			next;
			specialeffect2 EF_DEVIL;
			next;
			specialeffect2 EF_COIN;
			next;
			specialeffect2 EF_SIGHTRASHER;
			next;
			mes "[Wattana]";
			mes "How about that?";
			mes "Your item carrying";
			mes "muscles grew back,";
			mes "just like that! Try not to";
			mes "wimp out again, okay?";
			skill "ALL_INCCARRY",gympassmemory,SKILL_PERM_GRANT;
			cutin "",255;
			close;
		}
		else {
			mes "[Wattana]";
			mes "Uhh...";
			mes "We didn't work out";
			mes "together before.";
			mes "I'm sure about that.";
			cutin "",255;
			close;
		}
	}
}