//      ______  __    __                                 
//     /\  _  \/\ \__/\ \ 
//     \ \ \_\ \ \ ,_\ \ \___      __    ___      __     
// _____\ \  __ \ \ \/\ \  _ `\  /'__`\/' _ `\  /'__`\   
///\  __\\ \ \/\ \ \ \_\ \ \ \ \/\  __//\ \/\ \/\ \_\.\_ 
//\ \_\_/ \ \_\ \_\ \__\\ \_\ \_\ \____\ \_\ \_\ \__/.\_\
// \/_/    \/_/\/_/\/__/ \/_/\/_/\/____/\/_/\/_/\/__/\/_/
//
//========================================================
// ---                  Party Warper                   ---
//========================================================
// ---                  by DanielArt                   ---
//========================================================

britoniah,74,61,4	script	Party Dungeon Warper::PTY_WARP	10121,{
	cutin "ep16gao_1",2;
	// Almacena la party ID.
	.@PID = getcharid(1);
	
	// Almacena la ID del leader
	.@LP = getpartyleader(.@PID,2);
	
	if(!.@PID) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
		mes "Lo siento, pero debes de estar en un grupo.";
		cutin "",255;
		close2;
		emotion ET_SORRY;
		cutin "",255;
		end;
	}
	
	if(.@LP != getcharid(0)) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
		mes "Por favor, dile a tu lider de grupo que hable conmigo, no tengo asuntos para tratar contigo.";
		cutin "",255;
		close;
	}
	
	mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
	mes "Te doy la bienvenida, ^5533ff"+strcharinfo(0)+"^000000";
	mes "Aquí te podré ofrecer mis servicios para transportar a tu party a un lugar en especifico.";
	next;
	switch(select("Destinos:^ff7070Información^000000:^777777Salir^000000")) {
		case 1:
			callsub S_Comprobation,.@PID,.z,.member;
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "Por favor selecciona tu destino.";
			next;
			.@m$ = "^777777Salir^000000:";
			for(.@i = 0; .@i < getarraysize(.WMap$); .@i++)
				.@m$ += .WName$[.@i]+":";
			.@s = select(.@m$) - 2;
			if(.@s == -1) {
				mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
				mes "Vuelve cuando gustes.";
				cutin "",255;
				close;
			}
			callsub S_Comprobation,.@PID,.z,.member;
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "De acuerdo, te llevaré a tu destino.";
			cutin "",255;
			close2;
			Zeny -= .z;
			warpparty .WMap$[.@s],.WX[.@s],.WY[.@s],.@PID;
			cutin "",255;
			end;
		case 2:
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "Podrás ir con tu grupo a cualquiera de los destinos que te daré.";
			next;
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "Pero para poder hacerlo deberás de tener "+.member+" miembros activos en tu party.";
			next;
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "Y todos deberán de estar en el ^ff0000mismo mapa^000000 que tu.";
			cutin "",255;
			close;
		case 3:
			mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
			mes "Vuelve cuando gustes.";
			cutin "",255;
			close;
	}

// Sub-función de adición de destinos [No tocar]
S_De:
	setarray .WName$[getarg(0)],getarg(1);
	setarray .WMap$[getarg(0)],getarg(2);
	setarray .WX[getarg(0)],getarg(3);
	setarray .WY[getarg(0)],getarg(4);
	return;
	
// Sub-función de comprobación de condiciones
S_Comprobation:
	.@PID = getarg(0);
	.@ze = getarg(1);
	.@me = getarg(2);
	if(Zeny < .z) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
		mes "No tienes suficiente Zeny para usar este servicio.";
		mes "Requiero ^5533ff"+callfunc("F_InsertComma",.@ze)+"^000000.";
		cutin "",255;
		close2;
		emotion ET_SORRY;
		cutin "",255;
		end;
	}
	getpartymember .@PID,0;
	getpartymember .@PID,1;
	getpartymember .@PID,2;
	if($@partymembercount < .@me) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
		mes "No cuentas con suficientes miembros en tu grupo.";
		cutin "",255;
		close2;
		emotion ET_SORRY;
		cutin "",255;
		end;
	}
	.@m = .@n = 0;
	for(.@i = 0; .@i < $@partymembercount; .@i++) {
		if(isloggedin($@partymemberaid[.@i],$@partymembercid[.@i])) {
			.@m++;
			if(strcharinfo(3,getcharid(0)) != strcharinfo(3,$@partymembercid[.@i]))
				.@n++;
		}
	}
	if(.@n) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000]";
		mes "Alguno de tus miembros no está en tu mismo mapa.";
		cutin "",255;
		close2;
		emotion ET_SORRY;
		cutin "",255;
		end;
	}
	if(.@m < .@me) {
		mes "[^cc6600 "+strnpcinfo(1)+"^000000 ]";
		mes "Tu grupo no cumple con las condiciones.";
		mes "Se requieren al menos ^cc6600"+.@me+"^000000 miembros en línea.";
		mes "Sólo hay ^5533ff"+.@m+" / "+$@partymembercount+"^000000 miembros en línea.";
		cutin "",255;
		close2;
		emotion ET_SORRY;
		cutin "",255;
		end;
	}
	return;

// Configuración
OnInit:
	// Cantidad de miembros requeridos para el warp.
	.member = 5;
	
	// Precio del transporte cobrado al lider.
	.z = 30000;
	
	// Destinos
	// Formato: callsub S_De,id,"Nombre del mapa",				mapa,		x,		y;
	callsub S_De,0,	"Comodo Field [ ^FF3300Anolians^000000 ]",			"cmd_fild03",	174,	356;
	callsub S_De,1,	"Glast Heim Dungeon 2 [ ^FF3300Majororus^000000 ]",	"gl_dun02",	224,	266;
	callsub S_De,2,	"Ice Dungeon 2",								"ice_dun02",	150,	281;
	callsub S_De,3,	"Niffheilm 1",									"nif_fild01",	315,	64;
	callsub S_De,4,	"Magma Dungeon 2",							"mag_dun02",	48,		31;
	callsub S_De,5,	"Odin Temple 2",								"odin_tem02",	237,	153;
	callsub S_De,6,	"Sphinx 4 [ ^FF3300Anubis^000000 ]",				"in_sphinx4",	10,		220;

	// Mensajes del Chat
	setarray .chat$,"","Party Warper","Mínimo "+.member+" miembros","","Req. "+callfunc("F_InsertComma",.z)+"z.";
	
	while(1) {
		for($@wtp = 0; $@wtp < getarraysize(.chat$); $@wtp++) {
			delwaitingroom;
			waitingroom .chat$[$@wtp],0;
			sleep 1000;
		}
		sleep 50; // Infinity Loop
	}
	cutin "",255;
	end;
}